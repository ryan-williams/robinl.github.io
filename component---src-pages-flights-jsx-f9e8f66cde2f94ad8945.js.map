{"version":3,"sources":["webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack://gatsby-starter-hello-world/./src/components/mdx_obs_page.jsx","webpack://gatsby-starter-hello-world/./node_modules/@robinl/my-flights/fe522555ef506fc9@514.js","webpack://gatsby-starter-hello-world/./src/pages/flights.jsx"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","props","post","define","output_order","children","css","className","title","post_frontmatter","description","_templateObject","_templateObject2","_templateObject3","_title","md","diff_years","start_end_date","_2","_blurb","format_date","routes","fmt_num","average_miles","total_miles","fmt_num_round","eu","tonnes_co2","length","flying","flying_miles_to_kwh","_chart","DOM","width","height","d3","projection","sphere","land","resample","colour_scale","drag","context","context2d","path","geoPath","render","clearRect","beginPath","fillStyle","fill","stroke","forEach","d","coordinates","resampled","mid_point_with_drift","route","type","lineWidth","lineO","strokeStyle","select","canvas","call","on","node","_projection","geoOrthographic","fitExtent","translate","rotate","precision","_tonnes_co2","kwh_to_kg_co2","_kwh_to_kg_co2","kwh","convert","per","_total_miles","sum","_average_miles","mean","_eu","require","_start_end_date","extent","_fmt_num","format","_fmt_num_round","_diff_years","dt2","dt1","diff","getTime","Math","abs","round","_format_date","toISOString","split","_colour_scale","scaleSequential","interpolateOrRd","domain","_resample","i","n","before","after","c0","c1","p0","p1","x10","y10","d1","push","c2","geoInterpolate","p2","x20","y20","dz","t","invert","_drag","versor","v0","q0","r0","cartesian","mouse","this","v1","q1","multiply","delta","rotation","_height","_sphere","_land","topojson","world","feature","objects","_world","json","_versor","_topojson","_d3","_routes_raw","csv","autoType","_routes","routes_raw","map","random","runtime","observer","main","module","variable","frontmatter","post_date","code_url","post_type","post_category","data"],"mappings":"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","file":"component---src-pages-flights-jsx-f9e8f66cde2f94ad8945.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import React from 'react'\nimport Layout from \"../layouts/layout\"\nimport ObeservableNotebookDiv from \"./observable_div\"\nimport PostFrontMatter from \"./post_frontmatter\"\nimport SEO from \"../components/seo\"\n\nfunction ObsMdxPage(props) {\n\n\n  let post\n\n  if (props.define) {\n    post = <ObeservableNotebookDiv define={props.define} output_order={props.output_order} />\n  } else {\n    post = props.children\n  }\n\n  return (\n    <Layout css={props.className}>\n      <SEO title={props.post_frontmatter.title} description={props.post_frontmatter.description} />\n      <PostFrontMatter post_frontmatter={props.post_frontmatter} />\n      {post}\n    </Layout>\n  )\n\n}\n\nexport default ObsMdxPage","import _taggedTemplateLiteral from \"/home/runner/work/robinl.github.io/robinl.github.io/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\n// https://observablehq.com/@robinl/my-flights@514\nfunction _title(md, diff_years, start_end_date) {\n  return md(_templateObject || (_templateObject = _taggedTemplateLiteral([\"# \", \" years of flights\"])), diff_years(start_end_date[1], start_end_date[0]));\n}\n\nfunction _2(md) {\n  return md(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"A final version of this notebook can be viewed on my blog [here](https://www.robinlinacre.com/flights/).\"])));\n}\n\nfunction _blurb(md, format_date, start_end_date, routes, fmt_num, average_miles, total_miles, fmt_num_round, eu, tonnes_co2) {\n  return md(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"Between \", \" and \", \" I took \", \" flights with and average distance of \", \" miles, and total milage of \", \".  Total energy usage was around \", \" kwh or \", \" tonnes of co2.\\n\\nYou can drag the globe below to rotate.\"])), format_date(start_end_date[0]), format_date(start_end_date[1]), routes.length, fmt_num(average_miles), fmt_num(total_miles), fmt_num_round(eu.flying.flying_miles_to_kwh(total_miles)), fmt_num_round(tonnes_co2));\n}\n\nfunction _chart(DOM, width, height, d3, projection, sphere, land, routes, resample, colour_scale, drag) {\n  var context = DOM.context2d(width, height);\n  var path = d3.geoPath(projection, context);\n\n  function render() {\n    context.clearRect(0, 0, width, height);\n    context.beginPath(), path(sphere), context.fillStyle = \"#fff\", context.fill();\n    context.beginPath(), path(land), context.fillStyle = \"#000\", context.fill();\n    context.beginPath(), path(sphere), context.stroke();\n    routes.forEach(function (d) {\n      var coordinates = [[d[\"lng_from\"], d[\"lat_from\"]], [d[\"lng_to\"], d[\"lat_to\"]]];\n      var resampled = resample(coordinates);\n      var mid_point_with_drift = [resampled[\"after\"][1][0] + d[\"random\"], resampled[\"after\"][1][1] + d[\"random\"]];\n      resampled[\"after\"][1] = mid_point_with_drift;\n      var route = {\n        type: \"LineString\",\n        coordinates: resampled[\"after\"]\n      };\n      context.lineWidth = 1;\n      context.lineO;\n      context.beginPath(), path(route), context.strokeStyle = colour_scale(d[\"date\"]), context.stroke();\n    });\n    context.lineWidth = 1;\n    context.strokeStyle = \"#000000\";\n  }\n\n  return d3.select(context.canvas).call(drag(projection).on(\"drag.render\", render)).call(render).node();\n}\n\nfunction _projection(d3, width, height, sphere) {\n  return d3.geoOrthographic().fitExtent([[1, 1], [width - 1, height - 1]], sphere).translate([width / 2, height / 2]).rotate([0, -51]).precision(0.1);\n}\n\nfunction _tonnes_co2(kwh_to_kg_co2, eu, total_miles) {\n  return kwh_to_kg_co2(eu.flying.flying_miles_to_kwh(total_miles)) / 1000;\n}\n\nfunction _kwh_to_kg_co2(eu) {\n  return function (kwh) {\n    return kwh * eu.convert.per(\"kg_co2_jet_fuel/kwh\");\n  };\n}\n\nfunction _total_miles(d3, routes) {\n  return d3.sum(routes, function (d) {\n    return d[\"distance\"];\n  });\n}\n\nfunction _average_miles(d3, routes) {\n  return d3.mean(routes, function (d) {\n    return d[\"distance\"];\n  });\n}\n\nfunction _eu(require) {\n  return require(\"@robinl/energy_usage@0.0.34\");\n}\n\nfunction _start_end_date(d3, routes) {\n  return d3.extent(routes, function (d) {\n    return d[\"date\"];\n  });\n}\n\nfunction _fmt_num(d3) {\n  return d3.format(\",.0f\");\n}\n\nfunction _fmt_num_round(d3) {\n  return d3.format(\",.2r\");\n}\n\nfunction _diff_years() {\n  return function diff_years(dt2, dt1) {\n    var diff = (dt2.getTime() - dt1.getTime()) / 1000;\n    diff /= 60 * 60 * 24;\n    return Math.abs(Math.round(diff / 365.25));\n  };\n}\n\nfunction _format_date() {\n  return function (d) {\n    return d.toISOString().split('T')[0];\n  };\n}\n\nfunction _colour_scale(d3, routes) {\n  return d3.scaleSequential(d3.interpolateOrRd).domain(d3.extent(routes, function (d) {\n    return d[\"date\"];\n  }));\n}\n\nfunction _resample(projection, d3) {\n  return function resample(coordinates) {\n    var i = 0,\n        n = coordinates.length,\n        before = [],\n        after = [];\n\n    while (++i < n) {\n      var c0 = coordinates[i - 1].slice(),\n          c1 = coordinates[i].slice(),\n          p0 = projection(c0),\n          p1 = projection(c1),\n          x10 = p1[0] - p0[0],\n          y10 = p1[1] - p0[1],\n          d1 = x10 * x10 + y10 * y10;\n      before.push(c0);\n      after.push(c0);\n\n      if (d1 > 4 * .1) {\n        // linear distance check\n        var c2 = d3.geoInterpolate(c0, c1)(.5),\n            p2 = projection(c2),\n            x20 = p2[0] - p0[0],\n            y20 = p2[1] - p0[1],\n            dz = y10 * x20 - x10 * y20;\n\n        if (dz * dz / d1 > .1) {\n          // perpendicular distance check\n          var t = (x20 * x10 + y20 * y10) / d1;\n          before.push(projection.invert(c2.resampled = [p0[0] + t * x10, p0[1] + t * y10]));\n          after.push(c2);\n        }\n      }\n    }\n\n    if (n) before.push(c1), after.push(c1);\n    return {\n      before: before,\n      after: after\n    };\n  };\n}\n\nfunction _drag(versor, d3) {\n  return function drag(projection) {\n    var v0, q0, r0;\n\n    function dragstarted() {\n      v0 = versor.cartesian(projection.invert(d3.mouse(this)));\n      q0 = versor(r0 = projection.rotate());\n    }\n\n    function dragged() {\n      var v1 = versor.cartesian(projection.rotate(r0).invert(d3.mouse(this)));\n      var q1 = versor.multiply(q0, versor.delta(v0, v1));\n      projection.rotate(versor.rotation(q1));\n    }\n\n    return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged);\n  };\n}\n\nfunction _height(width) {\n  return width;\n}\n\nfunction _sphere() {\n  return {\n    type: \"Sphere\"\n  };\n}\n\nfunction _land(topojson, world) {\n  return topojson.feature(world, world.objects.land);\n}\n\nfunction _world(d3) {\n  return d3.json(\"https://unpkg.com/world-atlas@1/world/110m.json\");\n}\n\nfunction _versor(require) {\n  return require(\"versor@0.0.3\");\n}\n\nfunction _topojson(require) {\n  return require(\"topojson-client@3\");\n}\n\nfunction _d3(require) {\n  return require(\"d3@5\");\n}\n\nfunction _routes_raw(d3) {\n  return d3.csv(\"https://gist.githubusercontent.com/RobinL/ba3acbf42349115ed266a98643eb5a80/raw/a603b1fec071383d6a3eb27cbcda789c54cb0014/my_flights.csv\", d3.autoType);\n}\n\nfunction _routes(routes_raw) {\n  return routes_raw.map(function (d) {\n    d[\"random\"] = (Math.random() - 0.5) * d[\"distance\"] / 1000;\n    return d;\n  });\n}\n\nexport default function define(runtime, observer) {\n  var main = runtime.module();\n  main.variable(observer(\"title\")).define(\"title\", [\"md\", \"diff_years\", \"start_end_date\"], _title);\n  main.variable(observer()).define([\"md\"], _2);\n  main.variable(observer(\"blurb\")).define(\"blurb\", [\"md\", \"format_date\", \"start_end_date\", \"routes\", \"fmt_num\", \"average_miles\", \"total_miles\", \"fmt_num_round\", \"eu\", \"tonnes_co2\"], _blurb);\n  main.variable(observer(\"chart\")).define(\"chart\", [\"DOM\", \"width\", \"height\", \"d3\", \"projection\", \"sphere\", \"land\", \"routes\", \"resample\", \"colour_scale\", \"drag\"], _chart);\n  main.variable(observer(\"projection\")).define(\"projection\", [\"d3\", \"width\", \"height\", \"sphere\"], _projection);\n  main.variable(observer(\"tonnes_co2\")).define(\"tonnes_co2\", [\"kwh_to_kg_co2\", \"eu\", \"total_miles\"], _tonnes_co2);\n  main.variable(observer(\"kwh_to_kg_co2\")).define(\"kwh_to_kg_co2\", [\"eu\"], _kwh_to_kg_co2);\n  main.variable(observer(\"total_miles\")).define(\"total_miles\", [\"d3\", \"routes\"], _total_miles);\n  main.variable(observer(\"average_miles\")).define(\"average_miles\", [\"d3\", \"routes\"], _average_miles);\n  main.variable(observer(\"eu\")).define(\"eu\", [\"require\"], _eu);\n  main.variable(observer(\"start_end_date\")).define(\"start_end_date\", [\"d3\", \"routes\"], _start_end_date);\n  main.variable(observer(\"fmt_num\")).define(\"fmt_num\", [\"d3\"], _fmt_num);\n  main.variable(observer(\"fmt_num_round\")).define(\"fmt_num_round\", [\"d3\"], _fmt_num_round);\n  main.variable(observer(\"diff_years\")).define(\"diff_years\", _diff_years);\n  main.variable(observer(\"format_date\")).define(\"format_date\", _format_date);\n  main.variable(observer(\"colour_scale\")).define(\"colour_scale\", [\"d3\", \"routes\"], _colour_scale);\n  main.variable(observer(\"resample\")).define(\"resample\", [\"projection\", \"d3\"], _resample);\n  main.variable(observer(\"drag\")).define(\"drag\", [\"versor\", \"d3\"], _drag);\n  main.variable(observer(\"height\")).define(\"height\", [\"width\"], _height);\n  main.variable(observer(\"sphere\")).define(\"sphere\", _sphere);\n  main.variable(observer(\"land\")).define(\"land\", [\"topojson\", \"world\"], _land);\n  main.variable(observer(\"world\")).define(\"world\", [\"d3\"], _world);\n  main.variable(observer(\"versor\")).define(\"versor\", [\"require\"], _versor);\n  main.variable(observer(\"topojson\")).define(\"topojson\", [\"require\"], _topojson);\n  main.variable(observer(\"d3\")).define(\"d3\", [\"require\"], _d3);\n  main.variable(observer(\"routes_raw\")).define(\"routes_raw\", [\"d3\"], _routes_raw);\n  main.variable(observer(\"routes\")).define(\"routes\", [\"routes_raw\"], _routes);\n  return main;\n}","import React from 'react'\nimport define from \"@robinl/my-flights\"\nimport ObsMdxPage from \"../components/mdx_obs_page\"\n\nexport const frontmatter = {\n         title: \"My flights\",\n         post_date: \"2019-10-05\",\n         code_url: \"https://observablehq.com/@robinl/my-flights/\",\n         post_type: \"obs\",\n         post_category: \"energy\",\n         description: \"A history of my flights\"\n       }\n\nlet output_order = [\n    \"title\",\n    \"blurb\",\n    \"chart\"\n]\n\nexport default ({ data }) => (\n    <ObsMdxPage\n        define={define}\n        output_order={output_order}\n        post_frontmatter={frontmatter}/>\n\n)\n"],"sourceRoot":""}