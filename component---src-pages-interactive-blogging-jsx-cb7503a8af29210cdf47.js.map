{"version":3,"sources":["webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/AwaitValue.js","webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","webpack://gatsby-starter-hello-world/./src/components/mdx_obs_page.jsx","webpack://gatsby-starter-hello-world/./node_modules/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb/30c5bf135cab7285@518.js","webpack://gatsby-starter-hello-world/./src/pages/interactive_blogging.jsx"],"names":["_AwaitValue","value","this","wrapped","_awaitAsyncGenerator","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","AsyncGenerator","gen","front","back","resume","key","arg","result","wrappedAwait","AwaitValue","Promise","resolve","then","settle","done","err","type","reject","next","_invoke","request","undefined","_wrapAsyncGenerator","fn","apply","arguments","prototype","Symbol","asyncIterator","props","post","define","output_order","children","css","className","title","post_frontmatter","description","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_createForOfIteratorHelper","o","allowArrayLike","it","iterator","Array","isArray","minLen","_arrayLikeToArray","n","toString","call","constructor","name","from","test","_unsupportedIterableToArray","length","i","F","s","e","_e","f","TypeError","normalCompletion","didErr","step","_e2","return","arr","len","arr2","_1","md","_message","_x","_x2","_x3","_message2","_callee","Promises","html","d3","text","message","span","current_message","current_spans","_iterator","_step","_span","v","_context","prev","delay","substr","style","color","interpolateViridis","setAttribute","innerHTML","firstChild","getAttribute","toggleAttribute","hasAttribute","stop","_md1","_md2","_md3","_md4","_md5","_md6","_d3","require","runtime","observer","main","module","variable","frontmatter","post_date","code_url","post_type","post_category","data"],"mappings":"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","file":"component---src-pages-interactive-blogging-jsx-cb7503a8af29210cdf47.js","sourcesContent":["export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nAsyncGenerator.prototype[typeof Symbol === \"function\" && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n};\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import React from 'react'\nimport Layout from \"../layouts/layout\"\nimport ObeservableNotebookDiv from \"./observable_div\"\nimport PostFrontMatter from \"./post_frontmatter\"\nimport SEO from \"../components/seo\"\n\nfunction ObsMdxPage(props) {\n\n\n  let post\n\n  if (props.define) {\n    post = <ObeservableNotebookDiv define={props.define} output_order={props.output_order} />\n  } else {\n    post = props.children\n  }\n\n  return (\n    <Layout css={props.className}>\n      <SEO title={props.post_frontmatter.title} description={props.post_frontmatter.description} />\n      <PostFrontMatter post_frontmatter={props.post_frontmatter} />\n      {post}\n    </Layout>\n  )\n\n}\n\nexport default ObsMdxPage","import _taggedTemplateLiteral from \"/home/runner/work/robinl.github.io/robinl.github.io/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _awaitAsyncGenerator from \"/home/runner/work/robinl.github.io/robinl.github.io/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"/home/runner/work/robinl.github.io/robinl.github.io/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12;\n\nimport _regeneratorRuntime from \"/home/runner/work/robinl.github.io/robinl.github.io/node_modules/@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb@518\nfunction _1(md) {\n  return md(_templateObject || (_templateObject = _taggedTemplateLiteral([\"# Interactive blogging with Observable Notebooks and gatsby.js\"])));\n}\n\nfunction _message(_x, _x2, _x3) {\n  return _message2.apply(this, arguments);\n}\n\nfunction _message2() {\n  _message2 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(Promises, html, d3) {\n    var i, text, message, span, current_message, current_spans, _iterator, _step, _span, v;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            i = 0;\n            text = \"Interactive blogging with Observable Notebooks and gatsby.js\";\n\n          case 2:\n            if (!(i < text.length)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 5;\n            return _awaitAsyncGenerator(Promises.delay(40));\n\n          case 5:\n            span = html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<span>\", \"</span>\"])), text.substr(i, 1));\n            span.style.color = d3.interpolateViridis(i / text.length);\n            span.setAttribute(\"value\", i);\n            span.setAttribute(\"ascending\", \"ascending\");\n\n            if (i == 0) {\n              message = html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<span>\", \"\"])), span);\n            } else {\n              message = html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \"\", \"\"])), message.innerHTML, span);\n            }\n\n            i = i + 1;\n            _context.next = 13;\n            return html(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<h1>\", \"</h1>\"])), message);\n\n          case 13:\n            _context.next = 2;\n            break;\n\n          case 15:\n            if (!(i >= text.length)) {\n              _context.next = 27;\n              break;\n            }\n\n            _context.next = 18;\n            return _awaitAsyncGenerator(Promises.delay(100));\n\n          case 18:\n            current_message = html(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"<h1>\", \"</h1>\"])), message);\n            current_spans = current_message.firstChild.children;\n            _iterator = _createForOfIteratorHelper(current_spans);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                _span = _step.value;\n                v = +_span.getAttribute(\"value\");\n\n                if (v == text.length | v == -1) {\n                  _span.toggleAttribute(\"ascending\");\n                }\n\n                _span.hasAttribute(\"ascending\") ? v-- : v++;\n\n                _span.setAttribute(\"value\", v);\n\n                _span.style.color = d3.interpolateViridis(v / text.length); // span.style.fontSize = Math.sin(v / 10) + 20 + \"px\";\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            i = i + 1;\n            _context.next = 25;\n            return current_message;\n\n          case 25:\n            _context.next = 15;\n            break;\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _message2.apply(this, arguments);\n}\n\nfunction _md1(md) {\n  return md(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"This website contains a variety of interactive content like my [energy usage calculator](https://robinl.github.io/robinlinacre/energy-usage) which I can create easily and host for free.  In this post I explain how the it all works.\\n\\n## Observable notebooks\\n\\nI use [Observable Notebooks](https://observablehq.com) as the authoring environment for interactive content.  This is my favourite programming environment because it allows me to [maximise the time I spend on the fun part of programming](https://observablehq.com/@tmcw/why-observable-for-people-who-already-have-a-text-editor).\\n\\nThis allows readers to not only view the code behind each page ([including this one!](https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb)), but also to live-edit it and fork it.  On the [Observable Notebooks](https://observablehq.com) homepage, you can see that the ability to reuse, re-mix and iterate leads to an amazing amount of creativity.\\n\\nI then use [gatsby.js](gatsbyjs.org) to build my notebooks into a website.  \\n\\nThe idea is that you end up with the best of all worlds:  A fun, simple authoring environment with unlimited power for interactivity, which can be hosted for free on a static web host like Github pages.\\n\\nWhat follows are a few notes about how I got everything working.  If you'd rather jump straight into the code, you can find a minimal, working template [here](https://github.com/robinl/gasby_observable_blog/), and the code for my blog is [here](https://github.com/robinl/robinlinacre).\\n\"])));\n}\n\nfunction _md2(md) {\n  return md(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"## Gastby.js as a site generator\\n\\nGatsby js is a modern website generator that uses the React framework.  Javascript modules can be installed as dependencies, and used within pages on your website.  \\n\\nThis is a good fit because each Observable notebook can be compiled and downloaded as a JavaScript module - see [here](https://observablehq.com/@observablehq/downloading-and-embedding-notebooks) - and so can be installed and made available as a part of a Gatsby site.\"])));\n}\n\nfunction _md3(md) {\n  return md(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"## Rendering notebooks in gatsby\\n\\nI use a React component to display each Observable notebook within a div - see [here](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/components/observable_div.jsx) for the implementation.  \\n\\nI then have an [page component](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/components/obs_page.js) that serves as a default layout for each page on my website which contains a notebook.  \\n\\nEach notebook is a standard gatsby page which imports the Observable notebook, and then passes it to the page component.  [Here's](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/pages/gatsby-test-2.js) an example.   `output_order` allows the author to control which cells are displayed and in what order.\\n\\nFor a long time I experimented with the idea of loading all notebooks from a json file, and then using createPage (e.g. like  [this](https://github.com/RobinL/gasby_observable_blog/blob/14537c158c2c729cb985a56c5acc5d292c958379/gatsby-node.js#L25) to create the pages,  rather than needing a separate `jsx` page for each notebook.  The json would look like this:\\n\\n```json\\n[\\n    {   \\\"page_path\\\": \\\"page1\\\",\\n        \\\"observable_note_name\\\": \\\"gatsby-test\\\"\\n    },\\n    {   \\n        \\\"page_path\\\": \\\"page2\\\",\\n        \\\"observable_note_name\\\": \\\"gatsby-test-2\\\",\\n        \\\"output_order\\\": [\\\"cell1\\\", \\\"cell2\\\"]\\n    }\\n]\\n```\\n\\nI now don't think this is possible, because of the way webpack works.  See [here](https://stackoverflow.com/questions/58011164/dynamic-module-import-in-component-for-gatsby-js-site).\\n\\n\"], [\"## Rendering notebooks in gatsby\\n\\nI use a React component to display each Observable notebook within a div - see [here](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/components/observable_div.jsx) for the implementation.  \\n\\nI then have an [page component](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/components/obs_page.js) that serves as a default layout for each page on my website which contains a notebook.  \\n\\nEach notebook is a standard gatsby page which imports the Observable notebook, and then passes it to the page component.  [Here's](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/pages/gatsby-test-2.js) an example.   \\\\`output_order\\\\` allows the author to control which cells are displayed and in what order.\\n\\nFor a long time I experimented with the idea of loading all notebooks from a json file, and then using createPage (e.g. like  [this](https://github.com/RobinL/gasby_observable_blog/blob/14537c158c2c729cb985a56c5acc5d292c958379/gatsby-node.js#L25) to create the pages,  rather than needing a separate \\\\`jsx\\\\` page for each notebook.  The json would look like this:\\n\\n\\\\`\\\\`\\\\`json\\n[\\n    {   \\\"page_path\\\": \\\"page1\\\",\\n        \\\"observable_note_name\\\": \\\"gatsby-test\\\"\\n    },\\n    {   \\n        \\\"page_path\\\": \\\"page2\\\",\\n        \\\"observable_note_name\\\": \\\"gatsby-test-2\\\",\\n        \\\"output_order\\\": [\\\"cell1\\\", \\\"cell2\\\"]\\n    }\\n]\\n\\\\`\\\\`\\\\`\\n\\nI now don't think this is possible, because of the way webpack works.  See [here](https://stackoverflow.com/questions/58011164/dynamic-module-import-in-component-for-gatsby-js-site).\\n\\n\"])));\n}\n\nfunction _md4(md) {\n  return md(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"## Continuous deployment\\n\\nI use Github actions for continuous deployment.  Specifically, any commits merged into dev trigger a workflow which builds the site, and pushes it to master, thus making it available as a github page.\\n\\nYou can see the action [here](https://github.com/RobinL/gasby_observable_blog/blob/dev/.github/workflows/main.yml).  Note you will need to generate a secret containing a [Github PAT](https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line) and add it to your repo's secrets.  The enables the workflow to commit code back to your repo.\\n\"])));\n}\n\nfunction _md5(md) {\n  return md(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"## Authoring workflow\\n\\nOnce all this is set up, the authoring process is very simple:\\n\\n**Step 1 - author your notebook and get the link**\\n\\nWrite an observable notebook, and publish it. Click the 'download code' button to get a link to the javascript module.  In the case of [this post](https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb), the link to the code is `https://api.observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb.tgz?v=3`.  \\n\\n**Step 2 - yarn add the notebook to gatsby**\\n\\nIn your gatsby website, install the notebook using \\n\\n```sh\\nyarn add https://api.observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb.tgz?v=3\\n```\\n\\n**Step 3 - create a new page**\\n\\nCreate a new page in your gatsby `src/pages/` directory called, say `interactive_blogging.jsx`.\\n\\nAdd the following boilerplate:\\n\\n```js\\nimport define from \\\"@robinl/interactive-blogging-with-observable-notebooks-and-gatsb\\\"\\nimport ObservablePage from \\\"../components/obs_page\\\"\\n\\nexport default ({ data }) => (\\n    ObservablePage(define)\\n)\\n```\\n\\n\\nThat's it!\\n\\nTo update a page is even easier - you just retrieve the version number of the notebook from 'history' page with the Observable notebook, and manually update the `yarn.lock` file with the new version number. See [here](https://github.com/RobinL/robinlinacre/commit/ad9255cc57cecfeaf3a93f6b8c9707abad558686) for an example.\\n\\n\\nYou can find an example of all the code you need to add a page [here](https://github.com/RobinL/robinlinacre/pull/19), which is the pull request that created the page you're reading right now!\\n\\n\"], [\"## Authoring workflow\\n\\nOnce all this is set up, the authoring process is very simple:\\n\\n**Step 1 - author your notebook and get the link**\\n\\nWrite an observable notebook, and publish it. Click the 'download code' button to get a link to the javascript module.  In the case of [this post](https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb), the link to the code is \\\\`https://api.observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb.tgz?v=3\\\\`.  \\n\\n**Step 2 - yarn add the notebook to gatsby**\\n\\nIn your gatsby website, install the notebook using \\n\\n\\\\`\\\\`\\\\`sh\\nyarn add https://api.observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb.tgz?v=3\\n\\\\`\\\\`\\\\`\\n\\n**Step 3 - create a new page**\\n\\nCreate a new page in your gatsby \\\\`src/pages/\\\\` directory called, say \\\\`interactive_blogging.jsx\\\\`.\\n\\nAdd the following boilerplate:\\n\\n\\\\`\\\\`\\\\`js\\nimport define from \\\"@robinl/interactive-blogging-with-observable-notebooks-and-gatsb\\\"\\nimport ObservablePage from \\\"../components/obs_page\\\"\\n\\nexport default ({ data }) => (\\n    ObservablePage(define)\\n)\\n\\\\`\\\\`\\\\`\\n\\n\\nThat's it!\\n\\nTo update a page is even easier - you just retrieve the version number of the notebook from 'history' page with the Observable notebook, and manually update the \\\\`yarn.lock\\\\` file with the new version number. See [here](https://github.com/RobinL/robinlinacre/commit/ad9255cc57cecfeaf3a93f6b8c9707abad558686) for an example.\\n\\n\\nYou can find an example of all the code you need to add a page [here](https://github.com/RobinL/robinlinacre/pull/19), which is the pull request that created the page you're reading right now!\\n\\n\"])));\n}\n\nfunction _md6(md) {\n  return md(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"## mdx\\n\\nAnother good option within the gatsby ecosystem for authoring interactive pages is mdx.  This is an excellent choice if you want to, for instance, write a blog post in markdown [like this](https://robinl.github.io/robinlinacre/my_mdx_page) but add a vega lite chart.\\n\\nYou can find an example of a component that renders mdx [here](https://github.com/RobinL/robinlinacre/blob/c375c64428bad3021c90594e5d976dc31080de83/src/pages/my_mdx_page.jsx#L1), an `mdx` page that includes a vega lite chart [here](https://github.com/RobinL/robinlinacre/blob/c375c64428bad3021c90594e5d976dc31080de83/src/mdx/first_post.mdx) and a pull request that adds code syntax highlighting for these pages [here](https://github.com/RobinL/robinlinacre/pull/18/files).\\n\\n\"], [\"## mdx\\n\\nAnother good option within the gatsby ecosystem for authoring interactive pages is mdx.  This is an excellent choice if you want to, for instance, write a blog post in markdown [like this](https://robinl.github.io/robinlinacre/my_mdx_page) but add a vega lite chart.\\n\\nYou can find an example of a component that renders mdx [here](https://github.com/RobinL/robinlinacre/blob/c375c64428bad3021c90594e5d976dc31080de83/src/pages/my_mdx_page.jsx#L1), an \\\\`mdx\\\\` page that includes a vega lite chart [here](https://github.com/RobinL/robinlinacre/blob/c375c64428bad3021c90594e5d976dc31080de83/src/mdx/first_post.mdx) and a pull request that adds code syntax highlighting for these pages [here](https://github.com/RobinL/robinlinacre/pull/18/files).\\n\\n\"])));\n}\n\nfunction _d3(require) {\n  return require(\"d3\");\n}\n\nexport default function define(runtime, observer) {\n  var main = runtime.module();\n  main.variable(observer()).define([\"md\"], _1);\n  main.variable(observer(\"message\")).define(\"message\", [\"Promises\", \"html\", \"d3\"], _message);\n  main.variable(observer(\"md1\")).define(\"md1\", [\"md\"], _md1);\n  main.variable(observer(\"md2\")).define(\"md2\", [\"md\"], _md2);\n  main.variable(observer(\"md3\")).define(\"md3\", [\"md\"], _md3);\n  main.variable(observer(\"md4\")).define(\"md4\", [\"md\"], _md4);\n  main.variable(observer(\"md5\")).define(\"md5\", [\"md\"], _md5);\n  main.variable(observer(\"md6\")).define(\"md6\", [\"md\"], _md6);\n  main.variable(observer(\"d3\")).define(\"d3\", [\"require\"], _d3);\n  return main;\n}","import React from \"react\"\nimport define from \"@robinl/interactive-blogging-with-observable-notebooks-and-gatsb\"\nimport ObsMdxPage from \"../components/mdx_obs_page\"\n\nexport const frontmatter = {\n  title: \"Interactive blogging with Observable Notebooks and gatsby.js\",\n  post_date: \"2019-10-11\",\n  code_url:\n    \"https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb\",\n  post_type: \"obs\",\n  post_category: \"data\",\n  description: \"\"\n}\n\nlet output_order = [\"message\", \"md1\", \"md2\", \"md3\", \"md4\", \"md5\", \"md6\"]\n\nexport default ({ data }) => (\n  <ObsMdxPage\n    define={define}\n    output_order={output_order}\n    post_frontmatter={frontmatter}\n  />\n)\n"],"sourceRoot":""}