{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/components/post_list.jsx","webpack://gatsby-starter-hello-world/./src/pages/index.jsx"],"names":["LinkHeader","props","undefined","category_homepage","to","post_header","simpledata","useStaticQuery","allJavascriptFrontmatter","edges","map","edge","robj","relative_path","node","relativePath","name","code_url","frontmatter","post_date","title","post_type","post_category","split","pop","filter","d","description","header","code","c"],"mappings":"8QAKA,SAASA,EAAWC,GAElB,OAAiCC,MAA3BD,EAAME,mBACF,mBAAI,QAAC,KAAD,CAAMC,GAAI,IAAMH,EAAME,kBAAoB,KAAMF,EAAMI,eAG1D,kBAAKJ,EAAMI,aA+EvB,MAzEA,SAAkBJ,GAChB,IA8BIK,GA9BSC,QAAe,cA8BNC,yBAAyBC,MAAMC,KAAI,SAAUC,GACjE,IAAIC,EAAO,CACTC,cAAeF,EAAKG,KAAKA,KAAKC,aAAaC,KAC3CC,SAAUN,EAAKG,KAAKI,YAAYD,SAChCE,UAAWR,EAAKG,KAAKI,YAAYC,UACjCC,MAAOT,EAAKG,KAAKI,YAAYE,MAC7BC,UAAWV,EAAKG,KAAKI,YAAYG,UACjCC,cAAeX,EAAKG,KAAKI,YAAYI,eAGxBV,EAAKK,SAASM,MAAM,KAAKC,MAIxC,OAAOZ,KAaT,OAVIX,EAAMqB,gBACRhB,EAAaA,EAAWmB,QAAO,SAAAC,GAAC,OAAIA,EAAEJ,eAAiBrB,EAAMqB,kBAG3DrB,EAAMoB,YACRf,EAAaA,EAAWmB,QAAO,SAAAC,GAAC,OAAIA,EAAEL,WAAapB,EAAMoB,eAMzD,oBACE,QAAC,IAAD,CAAKD,MAAM,qCACX,QAACpB,EAAD,CAAYK,YAAaJ,EAAMI,YAAaF,kBAAmBF,EAAME,oBACpEG,EAAWI,KAAI,SAAUgB,GACxB,OACE,iBACGA,EAAEP,UADL,KACgB,QAAC,KAAD,CAAMf,GAAI,IAAMsB,EAAEb,cAAgB,KAAMa,EAAEN,aCpDpE,MAxBA,WAcE,OACE,QAAC,IAAD,MACE,QAAC,IAAD,CAAKA,MAAM,mBAAmBO,YAAY,sCAdnC,CAET,CAAEC,OAAQ,+BAAgCC,KAAM,QAChD,CAAED,OAAQ,+BAAgCC,KAAM,wBAAyB1B,kBAAmB,yBAE5F,CAAEyB,OAAQ,4BAA6BC,KAAM,UAC7C,CAAED,OAAQ,QAASC,KAAM,UASjBnB,KAAI,SAAAoB,GAAC,OACT,QAAC,EAAD,CAAUR,cAAeQ,EAAED,KAAMxB,YAAayB,EAAEF,OAAQzB,kBAAmB2B,EAAE3B","file":"component---src-pages-index-jsx-22965823447488b3bac6.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport SEO from \"../components/seo\"\n\n\nfunction LinkHeader(props) {\n\n  if (!(props.category_homepage == undefined)) {\n    return (<h2><Link to={'/' + props.category_homepage + '/'}>{props.post_header}</Link></h2>)\n  }\n  else {\n    return (<h2>{props.post_header}</h2>)\n  }\n\n\n}\n\nfunction PostList(props) {\n  const data = useStaticQuery(\n    graphql`\n      {\n        allJavascriptFrontmatter(sort: { fields: [frontmatter___post_date], order: DESC }) {\n          edges {\n            node {\n              frontmatter {\n                title\n                post_date\n                post_type\n                post_category\n                code_url\n                error\n              }\n              node {\n                relativePath {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n\n\n  // Simplify data\n\n  let simpledata = data.allJavascriptFrontmatter.edges.map(function (edge) {\n    let robj = {\n      relative_path: edge.node.node.relativePath.name,\n      code_url: edge.node.frontmatter.code_url,\n      post_date: edge.node.frontmatter.post_date,\n      title: edge.node.frontmatter.title,\n      post_type: edge.node.frontmatter.post_type,\n      post_category: edge.node.frontmatter.post_category,\n    }\n\n    let file_ext = robj.code_url.split(\".\").pop()\n\n\n\n    return robj\n  })\n\n  if (props.post_category) {\n    simpledata = simpledata.filter(d => d.post_category == props.post_category)\n  }\n\n  if (props.post_type) {\n    simpledata = simpledata.filter(d => d.post_type == props.post_type)\n  }\n\n\n\n  return (\n    <div>\n      <SEO title=\"Robin Linacre's blog: Post list\" />\n      <LinkHeader post_header={props.post_header} category_homepage={props.category_homepage}></LinkHeader>\n      {simpledata.map(function (d) {\n        return (\n          <p>\n            {d.post_date} <Link to={'/' + d.relative_path + '/'}>{d.title}</Link>\n          </p>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../layouts/layout\"\nimport PostList from \"../components/post_list\"\nimport SEO from \"../components/seo\"\nfunction Index() {\n\n  let cats = [\n\n    { header: \"Data science and engineering\", code: \"data\" },\n    { header: \"Probabilistic record linkage\", code: \"probabilistic_linkage\", category_homepage: \"probabilistic_linkage\" },\n\n    { header: \"Energy and climate change\", code: \"energy\" },\n    { header: \"Other\", code: \"other\" },\n\n\n  ]\n\n\n  return (\n    <Layout>\n      <SEO title=\"robinlinacre.com\" description=\"Robin Linacre's personal homepage\" />\n      {cats.map(c => (\n        <PostList post_category={c.code} post_header={c.header} category_homepage={c.category_homepage} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default Index\n\n\n"],"sourceRoot":""}