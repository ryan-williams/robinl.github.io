(self.webpackChunkgatsby_starter_hello_world=self.webpackChunkgatsby_starter_hello_world||[]).push([[957],{2263:function(e,t,o){"use strict";o(7294);var n=o(835),a=o(8847),r=o(7414),s=o(6140),i=o(674);t.Z=function(e){var t;return t=e.define?(0,i.tZ)(a.Z,{define:e.define,output_order:e.output_order}):e.children,(0,i.tZ)(n.Z,{css:e.className},(0,i.tZ)(s.Z,{title:e.post_frontmatter.title,description:e.post_frontmatter.description}),(0,i.tZ)(r.Z,{post_frontmatter:e.post_frontmatter}),t)}},3598:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return c},frontmatter:function(){return u}});o(7294);var n=o(2263),a=(o(9601),o(3948),o(6992),o(1539),o(7941),o(4983)),r=o(674);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e}).apply(this,arguments)}var i={_frontmatter:{}};function l(e){var t=e.components,o=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,["components"]);return(0,a.kt)("wrapper",s({},i,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Why you should open source your analytical work"),(0,a.kt)("p",null,"Working in the open improves the quality of analytical work and multiplies its impact."),(0,a.kt)("p",null,"The payoff extends far beyond transparency and reuse.  Greater benefits come from the way of working that is needed to publish work openly, because it promotes analytical best practice."),(0,a.kt)("p",null,"Analysts should therefore aim to open source the non-sensitive parts of their projects, which is often the majority of the code. Some of the key benefits which I've experienced are as follows:"),(0,a.kt)("h2",null,"Re-use, collaboration and documentation"),(0,a.kt)("p",null,"An obvious benefit of open source is that other teams and organisation can reuse the work.  Less obviously, the benefits of reuse are quickly realised within a team itself, for several reasons:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Collaboration and feedback"),".  It is much easier to tap into the expertise of the wider community of analysts when work is shared in the open.  In my experience, analysts outside the team are much more likely be helpful if they know they're contributing to open source work. This is motivated by a mutual understanding of the benefits of open source, and because they use free software themselves and want to 'pay it forward'."),(0,a.kt)("p",{parentName:"li"},"It's also enormously easier for analysts in different teams (or even different countries) to contribute to and use the same project if there is a single open source codebase.  This can often lead to iterative improvements as different teams find ways of improving the code, to the benefit of everyone.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Bug finding"),".  Many users make light work of QA, because they are quick to tell you when things aren't right.  It's not uncommon to get bug reports from all over the world.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Documentation"),". Open sourcing helps to quickly identify areas of weak documentation which are likely to cause problems of corporate knowledge retention, because if the documentation is lacking, you'll quickly receive questions.  If you're lucky, your users will even contribute to the documentation themselves."))),(0,a.kt)("h2",null,"Managing complexity and corporate knowledge retention"),(0,a.kt)("p",null,"A defining characteristic of high quality analytical work is that complexity is managed effectively."),(0,a.kt)("p",null,"At a basic level, this involves separating out data, assumptions, and modelling work, and ensuring results are reproducible."),(0,a.kt)("p",null,"In more complex projects, this usually means breaking down the problem into simpler parts, each of which has a clear responsibility with limited scope (a good 'separation of concerns').  These parts can then be run and quality assured separately."),(0,a.kt)("p",null,"If a project is to be open sourced, this approach to model building is essential from the outset because sensitive data and assumptions must be kept separate from the code."),(0,a.kt)("p",null,"It also encourages the analyst to consider the general version of the problem, rather than writing highly specific code that is capable only of solving the problem at hand.  This usually results in code that is better abstracted and easier to understand, because it requires clearer thinking about the problem.  It also"),(0,a.kt)("p",null,"In turn, generalised code increases agility, because it requires small modifications rather than a complete rewrite when requirements change.  Finally, generalised code is usually less sensitive because it reveals little about its specific application."),(0,a.kt)("p",null,"The overall result is projects that are easier to understand and maintain.  New members of staff can see how the problem has been split out into smaller, simpler parts, and do not have to understand the whole before they can usefully contribute."),(0,a.kt)("h2",null,"Quality assurance (QA)"),(0,a.kt)("p",null,"Over time, authors of open source have established a widely-adopted convention for quality assurance that allows external users to trust the work, despite the fact they usually have no contact with the authors.  This convention involves writing automated and self-documenting tests of the correctness of the code which run automatically whenever changes are made."),(0,a.kt)("p",null,"Trust in the project is established because this convention results in a fully-documented, robust quality assurance which is open to anybody to review, and improve."),(0,a.kt)("p",null,"Open sourcing code encourages analysts to develop an understanding of this process - which should be the gold standard for QA -  and to begin to follow this convention themselves."),(0,a.kt)("p",null,"An additional benefit of this kind of QA is it makes it much easier for a newcomer to the project to make improvements, because any changes they make are automatically tested before they are accepted."),(0,a.kt)("h2",null,"Job satisfaction and learning and development"),(0,a.kt)("p",null,"Speaking for myself, I find working on open source projects incredibly motivating.  I use other people's open source work every day, and so it feels good to be able to contribute back to the community.  It also means the value of my work extends beyond the immediate project - and it's very satisfying to hear about other people building on your work to achieve interesting things."),(0,a.kt)("p",null,"Familiarity with open source ways of working also uncovers huge opportunities for learning and development.  Rather than solving new problems from scratch, there's always a wealth of existing open source work to learn from and copy from.  By referring to the code of some of the most widely-used packages, you can learn from some of the best analysts in the world for free."))}l.isMDXComponent=!0;var u={title:"Why you should open source your analytical work",post_date:"2020-02-22",code_url:"https://github.com/RobinL/robinl.github.io/blob/dev/src/mdx/open_sourcing_analytical_work.mdx",post_type:"mdx",post_category:"data",description:""},c=function(e){e.data;return(0,r.tZ)(n.Z,{post_frontmatter:u},(0,r.tZ)(l,null))}}}]);
//# sourceMappingURL=component---src-pages-open-sourcing-analytical-work-jsx-a47cab9bad3882ff45e1.js.map