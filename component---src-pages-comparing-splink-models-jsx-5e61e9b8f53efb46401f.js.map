{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/mdx/comparing_splink_models.mdx","webpack://gatsby-starter-hello-world/./src/pages/comparing_splink_models.jsx"],"names":["layoutProps","_frontmatter","MDXContent","components","props","mdxType","style","parentName","VegaLite","spec","roc_comparison","model_01_two_levels_bf","model_02_fuzzy_simple_bf","model_03_fuzzy_complex_bf","runtimes","isMDXComponent","frontmatter","title","post_date","code_url","post_type","post_category","description","data","post_frontmatter"],"mappings":"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","file":"component---src-pages-comparing-splink-models-jsx-5e61e9b8f53efb46401f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Vega, VegaLite } from \"react-vega\";\nimport roc_comparison from \"./comparing_splink_models/roc_comparison.vl.json\";\nimport runtimes from \"./comparing_splink_models/runtimes.vl.json\";\nimport model_01_two_levels_bf from \"./comparing_splink_models/model_01_two_levels_bf.vl.json\";\nimport model_02_fuzzy_simple_bf from \"./comparing_splink_models/model_02_fuzzy_simple_bf.vl.json\";\nimport model_03_fuzzy_complex_bf from \"./comparing_splink_models/model_03_fuzzy_complex_bf.vl.json\";\nimport model_04_fuzzy_complex_and_tf_bf from \"./comparing_splink_models/model_04_fuzzy_complex_and_tf_bf.vl.json\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Are more complex probabilistic linkage models more accurate?`}</h1>\n    <p style={{\n      \"fontSize\": \"1.2rem\",\n      \"color\": \"#7c7c7c\",\n      \"marginTop\": \"-10px\"\n    }}>\n  <i>Part 1: Supervised learning</i>\n    </p>\n    <h2>{`Introduction`}</h2>\n    <p>{`Probabilistic linkage models generate pairwise comparisons of records and make predictions of whether the two records refer to the same entity. They are often used for deduplicating and linking datasets where unique person identifiers are not available.`}</p>\n    <p>{`The linkage score is computed by comparing different columns of the dataset to assess their similarity, and then weighting the importance of these comparisons to produce a final score. For those unfamiliar with these models, you can learn more in my `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.robinlinacre.com/intro_to_probabilistic_linkage/\"\n      }}>{`introductory training material`}</a>{`.`}</p>\n    <p>{`In the simplest models, the comparison may be a simple equality check. For example, is the first name equal or different? In this model, a match on the first name will increase the match score by a constant weighting. A non-match on first name will decrease the match score by some other constant.`}</p>\n    <p>{`This is clearly a crude model of the real world, and there are a variety of ways in which it can be made more realistic. For example:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`We may allow more than two match weights to be computed for a given column. For example, we may want a separate 'intermediate' match weight for the case that name is similar but not identical e.g. \"Rachel\" vs \"Rachael\".`}</li>\n      <li parentName=\"ul\">{`We may allow different match weights for different values of a column. For example, the match weight for a match on a common name like \"John\" may be lower than for a match on an uncommon name like \"Robin\".`}</li>\n      <li parentName=\"ul\">{`We may want to group together certain columns to avoid double counting. For instance, if postcodes match, we would probably want to avoid further increasing the final match score for a match on a 'city' field.`}</li>\n    </ul>\n    <p>{`This kind of feature engineering is dataset-specific and can be time consuming. This post considers whether it's worth it. Do more complex models have higher accuracy, and if so, how much higher? What kinds of feature engineering have the greatest impact on accuracy?`}</p>\n    <p>{`Questions of accuracy are most easily answered if we have access to a realistic test dataset. This dataset must be fully labelled, so that the true match status of each pairwise record comparison is known. The dataset used for this post is a synthetic dataset derived from records in WikiData. The code used to create this dataset if available `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/moj-analytical-services/splink_synthetic_data\"\n      }}>{`here`}</a>{`. Please contact me if you would like access to the full data.`}</p>\n    <p>{`In this post, I use `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/moj-analytical-services/splink\"\n      }}>{`Splink`}</a>{` (software for probabilistic record linkage at scale) to compute match scores, and then compare these scores to the ground truth. The headline finding is that models with more complex feature engineering are dramatically more accurate.`}</p>\n    <p>{`Models are trained using supervised learning: that is, I use the labels to compute model parameters parameters are derived from the labelled data. In `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.robinlinacre.com/comparing_splink_models_unsupervised/\"\n      }}>{`part 2`}</a>{`, I present the results of the same experiment using unsupervised learning.`}</p>\n    <h2>{`Models compared`}</h2>\n    <p>{`We compare the following models, further details of which are provided below.`}</p>\n    <ol {...{\n      \"start\": 0\n    }}>\n      <li parentName=\"ol\">{`A rules-based (deterministic) matching approach`}</li>\n      <li parentName=\"ol\">{`Basic two-level equality checks for all columns`}</li>\n      <li parentName=\"ol\">{`Simple fuzzy matching using default Splink settings`}</li>\n      <li parentName=\"ol\">{`More complex fuzzy matches, using customised Splink settings`}</li>\n      <li parentName=\"ol\">{`More complex fuzzy matches and term frequency adjustments`}</li>\n      <li parentName=\"ol\">{`More complex fuzzy matches and term frequency adjustments, with term frequency weights for fuzzy matches`}</li>\n    </ol>\n    <h2>{`Summary results`}</h2>\n    <p>{`We can summarise the results using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Receiver_operating_characteristic\"\n      }}>{`ROC curve`}</a>{`.`}</p>\n    <VegaLite spec={roc_comparison} mdxType=\"VegaLite\" />\n    <p>{`You can zoom into this chart using mousewheel/touchpad, and move around by dragging.`}</p>\n    <p>{`This chart tells us, for example, that for a false positive rate of 1%:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Model 0 achieves recall (a true positive rate) of around 20%`}</li>\n      <li parentName=\"ul\">{`Model 1 achieves recall (a true positive rate) of around 38%`}</li>\n      <li parentName=\"ul\">{`Model 2 achieves recall (a true positive rate) of around 54%`}</li>\n      <li parentName=\"ul\">{`Model 3 achieves recall (a true positive rate) of around 60%`}</li>\n      <li parentName=\"ul\">{`Model 4 achieves recall (a true positive rate) of around 68%`}</li>\n      <li parentName=\"ul\">{`Model 5 achieves recall (a true positive rate) of around 73%`}</li>\n    </ul>\n    <h2>{`Methodology`}</h2>\n    <p>{`In this section, I give a brief description of the differences between the models, and present their match weights. I then discuss how they were trained, and a few caveats.`}</p>\n    <p>{`Full reproducibility materials for all results can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/moj-analytical-services/splink_synthetic_data_performance_comparisons/tree/3c0f2ce0c697a7d70b612e2e30463bce611bf576\"\n      }}>{`here`}</a>{`.`}</p>\n    <h3>{`Data`}</h3>\n    <p>{`The input data is a synthetic dataset obtained by from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://query.wikidata.org/\"\n      }}>{`WikiData query service`}</a>{`, and then creating duplicating of these records that contain various errors corruptions.`}</p>\n    <p>{`There are a total of 1,105,780 records in the dataset, with 113,232 distinct persons. Cluster sizes range from 1 to 21, with a fairly equal distribution.`}</p>\n    <p>{`An example of some records is as follows, derived from `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.wikidata.org/wiki/Q34743\"\n      }}>{`this master record`}</a>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`dob`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`postcode`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`occupation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`surname_std`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`forename1_std`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`forename2_std`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1865-12-30`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`B95 5DG`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`journalist`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`kipling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`rudyard`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1865-12-30`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`journalist`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`kipling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`rudyard`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1865-12-60`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`B95 5DG`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`kipling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`rudyard`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1865-12-30`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`journalist`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`kipling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1865-12-30`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`B05 5DG`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`kipling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`joseph`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`CV37 9TW`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`author`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`kipling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`rudyard`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`joe`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`1865-12-80`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`kipling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`r`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Each model uses information from all of these columns.`}</p>\n    <p>{`As can be seen from the table, the data quality is poor - a large number of corruptions and nulls have been introduced. This should help to expose the differences in the accuracy of different models: if the data was very high quality, then most records would be trivially matchable and even the simplest model would perform well.`}</p>\n    <h3>{`Model 0`}</h3>\n    <p>{`Model 0 is a rules-based (deterministic) matching algorithm. The rules used to generate matches can be found in the code `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/moj-analytical-services/splink_synthetic_data_performance_comparisons/blob/354682ac50a422515a65d1b0fbfbd0fd7c8d8621/edge_generation/person/uk_citizens_max_groupsize_20/compare_models_rules_based/job.py#L110\"\n      }}>{`here`}</a>{` and are as follows.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-text\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`deterministic_matching_rules = [\n    \"l.postcode = r.postcode and l.dob = r.dob and l.forename1_dm = r.forename1_dm \",\n    \"l.dob = r.dob and l.forename1_dm = r.forename1_dm and l.forename2_dm = r.forename2_dm and l.surname_dm = r.surname_dm\",\n    \"l.postcode = r.postcode and l.forename1_dm = r.forename1_dm and l.forename2_dm = r.forename2_dm and l.surname_dm = r.surname_dm\",\n    \"l.forename1_dm = r.forename1_dm and l.forename2_dm = r.forename2_dm and l.surname_dm = r.surname_dm and l.occupation = r.occupation\",\n    \"l.outward_postcode_std = r.outward_postcode_std and l.forename1_std = r.forename1_std and l.surname_std = r.surname_std\",\n]`}</code></pre></div>\n    <p>{`In these rules 'dm' stands for the dmetaphone of a variable.`}</p>\n    <p>{`Since this is a rules based model, there are no match scores and thus only a single point is reachable in ROC space.`}</p>\n    <h3>{`Model 1`}</h3>\n    <p>{`The full settings for this model are `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/moj-analytical-services/splink_synthetic_data_performance_comparisons/blob/8daa5dbddae7079c2569609a00c57fd0c7c60559/model_training/person/uk_citizens_max_groupsize_20/compare_models/00_estimate_m_u/glue_py_resources/splink_settings.py#L62\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`In this model, a match weights are computed each of the seven columns using a simple two-level check of equality.`}</p>\n    <p>{`The match weights are as follows:`}</p>\n    <VegaLite spec={model_01_two_levels_bf} mdxType=\"VegaLite\" />\n    <h3>{`Model 2`}</h3>\n    <p>{`The full settings for this model are `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/moj-analytical-services/splink_synthetic_data_performance_comparisons/blob/8daa5dbddae7079c2569609a00c57fd0c7c60559/model_training/person/uk_citizens_max_groupsize_20/compare_models/00_estimate_m_u/glue_py_resources/splink_settings.py#L89\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`The model is the same as model 1, except:`}</p>\n    <ul>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`forename1_std`}</code>{` and `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`surname_std`}</code>{` compute a separate match weight for a fuzzy match, where the name does not exactly match, but the jaro winker score is >0.88`}</li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`dob`}</code>{` and `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`postcode`}</code>{` compute a separate match weight for a fuzzy match, whereby there's a single letter typo (a levenshtein distance of 1)`}</li>\n    </ul>\n    <p>{`The match weights are as follows:`}</p>\n    <VegaLite spec={model_02_fuzzy_simple_bf} mdxType=\"VegaLite\" />\n    <h3>{`Model 3`}</h3>\n    <p>{`The full settings for this model are `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/moj-analytical-services/splink_synthetic_data_performance_comparisons/blob/8daa5dbddae7079c2569609a00c57fd0c7c60559/model_training/person/uk_citizens_max_groupsize_20/compare_models/00_estimate_m_u/glue_py_resources/splink_settings.py#L120\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`In this model, a larger number of match weights are computed for each column:`}</p>\n    <ul>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`forename1_std`}</code>{`, `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`forename2_std`}</code>{` and `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`surname_std`}</code>{` have four match weights, corresponding to an exact match, jaro winker score of >0.88, jaro winker score of > 0.7 and no match.`}</li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`dob`}</code>{` has an additional match weight relative to model 2, covering 'suspicious' dates of birth on 1st January. In the dataset, these occur disproportionately, presumably because when the precise dob is unknown, the 1st of January is entered as a default`}</li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`postcode`}</code>{` has 5 match weights, which are computed based on various geographic distances between postcodes, and possible typos`}</li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`occupation`}</code>{` is a simple two level equality check`}</li>\n    </ul>\n    <p>{`The match weights are as follows:`}</p>\n    <VegaLite spec={model_03_fuzzy_complex_bf} mdxType=\"VegaLite\" />\n    <h3>{`Model 4`}</h3>\n    <p>{`Model 4 is the same as model 3, but in addition term frequency adjustments are made for each column.`}</p>\n    <p>{`The average match weights for model 4 are the same as those for model 3, above.`}</p>\n    <h3>{`Model 5`}</h3>\n    <p>{`Model 5 is the same as model 4, but we allow weighted term frequency adjustments for partial matches. The specific weights can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/moj-analytical-services/splink_synthetic_data_performance_comparisons/blob/354682ac50a422515a65d1b0fbfbd0fd7c8d8621/model_training/person/uk_citizens_max_groupsize_20/compare_models/00_estimate_m_u/glue_py_resources/splink_settings.py#L222\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`For example, this allows a term-frequency adjustment to be made for a fuzzy match of `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Robin`}</code>{` vs `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Robim`}</code>{` (note the typo). The weight moderates the strength of this adjustment downwards by a fixed multiple.`}</p>\n    <p>{`The average match weights for model 5 are the same as those for model 3, above.`}</p>\n    <h3>{`Model training`}</h3>\n    <p>{`Since our data is fully labelled, it's possible to compute match weights directly from the labels rather than estimate them. This means that any differences in accuracy can be attributed solely to the differences in how the records are compared (the feature engineering), as opposed to any problems that could occur in training.`}</p>\n    <h3>{`Runtimes`}</h3>\n    <p>{`The more complex models involve more computation, and so they take longer to run. In practice, how much does this matter?`}</p>\n    <p>{`The following chart shows that increase in runtime for the more complex models is relatively modest.`}</p>\n    <VegaLite spec={runtimes} mdxType=\"VegaLite\" />\n    <p>{`The term frequency adjustment used in Model 4 have the greatest impact on runtime, but even then, the runtime is only 8% longer than the simplest model.`}</p>\n    <h3>{`Caveats`}</h3>\n    <p>{`Further experiments would be needed to determine the extent to which these results generalisable to other datasets. One particular caveat is that the synthetic dataset deliberately contains many errors: there are many records which are of such poor quality that they are difficult to match. This makes it suitable for testing different models, and finding which perform best against these hard-to-match records.`}</p>\n    <p>{`However, for use cases which much higher quality datasets, most of the records will be easy to match, so the gains from using more complex models are likely to be less dramatic.`}</p>\n    <h2>{`Conclusions`}</h2>\n    <p>{`The experiments outlined in this post suggest that more complex probabilistic linkage models dramatically outperform simpler models. For many use cases, the effort of configuring these models, and the modest addition runtimes, are likely to be worth it.`}</p>\n    <p>{`In `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.robinlinacre.com/comparing_splink_models_unsupervised/\"\n      }}>{`part 2`}</a>{` I consider whether these results change when we use unsupervised learning to estimate model parameters.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\nimport ObsMdxPage from \"../components/mdx_obs_page\"\nimport MDXDocument from \"../mdx/comparing_splink_models.mdx\"\n\nexport const frontmatter = {\n         title: \"Are more complex probabilistic linkage models more accurate?  Part 1, supervised learning\",\n         post_date: \"2021-11-01\",\n         code_url:\n           \"https://github.com/RobinL/robinl.github.io/blob/dev/src/mdx/comparing_splink_models.mdx\",\n         post_type: \"mdx\",\n         post_category: \"probabilistic_linkage\",\n         description: \"How good is Splink: Are more complex probabilistic linkage models more accurate?\"\n       }\n\nexport default ({ data }) => (\n    <ObsMdxPage post_frontmatter={frontmatter}>\n        <MDXDocument />\n    </ObsMdxPage>\n)"],"sourceRoot":""}